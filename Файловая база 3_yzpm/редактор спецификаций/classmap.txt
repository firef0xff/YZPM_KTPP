protected:
		
int id;			//OBD
int idparent;	//TreeRow
int SpRazd;		//OBD
int pp;			//TreeRow
int ppp;		//TreeRow
int ei;			//TreeRow
int state;		//TreeRow
int UserID;		//TreeRow

String G_Obd;		//OBD
String V_Obd;		//OBD
String G_Obd_t;		//изначальное обозначенеие
String V_Obd_t;		//изначальное обозначенеие
String V_Obu;		//TreeRow
String G_Obu;		//TreeRow
String Name;		//OBD
String SpRazdName;	//OBD	
String format;		//TreeRow
String pos;			//TreeRow
String prim;		//TreeRow
String zona;		//TreeRow
String ppName;		//TreeRow
String eiName;		//TreeRow
String User;		//TreeRow
String CondName;	//TreeRow
String action;		//метка действия со строкой

String DetCreator;	//TreeRow
String DetUpdater;	//TreeRow
String RowCreator;	//TreeRow
String RowUpdater;	//TreeRow

double kol;			//TreeRow

bool Arhive;		//TreeRow
bool Force;			//TreeRow
bool CanChild;		//TreeRow
bool Accept;		//TreeRow
bool 	inBase;		//метка наличия строки в базе
bool 	new_obd;	//метка для нового обозначения детали для базы

TDateTime  DetCreated;	//TreeRow
TDateTime  DetUpdated;	//TreeRow
TDateTime  RowCreated;	//TreeRow
TDateTime  RowUpdated;	//TreeRow
	
const int &LUser;	//TreeRow

cSQL *const DB;		//OBD

private:
static int count;
	
//задачи
/*
1 добавить новые строки режим простой замены строк
2 замена обозначения при помощи опорной переменной при изменениии обозначения спросить что сделать...
3 для строк загруженных со всей спецификацией сделать признак + 
4 если есть этот признак то возможна замена обозначения иначе при смене обозначения полностью перечитать строку из базы
переменная action
при загрузке не из базы провести паралельную загрузку из базы и сделать разметку
при сохранении в базу проверить состав а при загрузке на редактирование автоблокировку
метка доступности к изменению
*/